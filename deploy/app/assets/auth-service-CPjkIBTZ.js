import{e as n,a8 as g}from"./index-DCzl8a2M.js";const S={async login(r,e){try{if(n)try{const{data:t,error:a}=await n.auth.signInWithPassword({email:r,password:e});if(!a&&t.user){const{data:c,error:i}=await n.from("users").select("*").eq("id",t.user.id).single();if(!i&&c)return await n.from("users").update({last_login:new Date().toISOString(),login_count:(c.login_count||0)+1}).eq("id",c.id),g("auth","login","تسجيل دخول",c.id),{success:!0,user:{id:c.id,email:c.email,name:c.name,role:c.role}}}}catch(t){console.error("Supabase auth error:",t)}const o=JSON.parse(localStorage.getItem("mock_auth_users")||"[]").find(t=>t.email===r&&t.password===e);if(o){const t=JSON.parse(localStorage.getItem("users")||"[]"),a=t.findIndex(c=>c.id===o.id);return a>=0&&(t[a].last_login=new Date().toISOString(),t[a].login_count=(t[a].login_count||0)+1,localStorage.setItem("users",JSON.stringify(t))),g("auth","login","تسجيل دخول",o.id),{success:!0,user:{id:o.id,email:o.email,name:o.name,role:o.role}}}return{success:!1,message:"البريد الإلكتروني أو كلمة المرور غير صحيحة"}}catch(s){return console.error("Login error:",s),{success:!1,message:`حدث خطأ أثناء تسجيل الدخول: ${s instanceof Error?s.message:String(s)}`}}},async logout(r){try{return r&&g("auth","logout","تسجيل خروج",r),n&&await n.auth.signOut(),localStorage.removeItem("auth_user"),{success:!0}}catch(e){return console.error("Logout error:",e),{success:!1,message:`حدث خطأ أثناء تسجيل الخروج: ${e instanceof Error?e.message:String(e)}`}}},async createUser(r){try{const{email:e,password:s,name:o,role:t,is_active:a=!0,avatar:c,permissions:i=[]}=r,m=Date.now().toString(),u={id:m,email:e,name:o,role:t,created_at:new Date().toISOString(),is_active:a,login_count:0,avatar:c,permissions:i},d=JSON.parse(localStorage.getItem("mock_auth_users")||"[]");d.push({id:m,email:e,password:s,name:o,role:t}),localStorage.setItem("mock_auth_users",JSON.stringify(d));const l=JSON.parse(localStorage.getItem("users")||"[]");return l.push(u),localStorage.setItem("users",JSON.stringify(l)),console.log("Created new user:",u),console.log("Updated users list:",l),{success:!0,user:u}}catch(e){return console.error("Error creating user:",e),{success:!1,message:`حدث خطأ أثناء إنشاء المستخدم: ${e instanceof Error?e.message:String(e)}`}}},async updateUser(r,e){try{const s=JSON.parse(localStorage.getItem("users")||"[]"),o=s.findIndex(t=>t.id===r);if(o>=0)e.name&&(s[o].name=e.name),e.role&&(s[o].role=e.role),e.is_active!==void 0&&(s[o].is_active=e.is_active),e.avatar!==void 0&&(s[o].avatar=e.avatar),e.permissions!==void 0&&(s[o].permissions=e.permissions),s[o].updated_at=new Date().toISOString(),localStorage.setItem("users",JSON.stringify(s)),console.log("Updated user:",s[o]);else return console.error("User not found for update:",r),{success:!1,message:"المستخدم غير موجود"};if(e.password){const t=JSON.parse(localStorage.getItem("mock_auth_users")||"[]"),a=t.findIndex(c=>c.id===r);a>=0&&(t[a].password=e.password,localStorage.setItem("mock_auth_users",JSON.stringify(t)))}return{success:!0}}catch(s){return console.error("Error updating user:",s),{success:!1,message:`حدث خطأ أثناء تحديث المستخدم: ${s instanceof Error?s.message:String(s)}`}}},async deleteUser(r){try{const s=JSON.parse(localStorage.getItem("users")||"[]").filter(a=>a.id!==r);localStorage.setItem("users",JSON.stringify(s)),console.log("Deleted user, remaining users:",s);const t=JSON.parse(localStorage.getItem("mock_auth_users")||"[]").filter(a=>a.id!==r);return localStorage.setItem("mock_auth_users",JSON.stringify(t)),{success:!0}}catch(e){return console.error("Error deleting user:",e),{success:!1,message:`حدث خطأ أثناء حذف المستخدم: ${e instanceof Error?e.message:String(e)}`}}},async getUsers(){try{const r=JSON.parse(localStorage.getItem("users")||"[]");return console.log("Fetched users from localStorage:",r),{success:!0,users:r}}catch(r){return console.error("Error fetching users:",r),{success:!1,message:`حدث خطأ أثناء جلب المستخدمين: ${r instanceof Error?r.message:String(r)}`,users:[]}}},async getUserById(r){try{if(n){const{data:e,error:s}=await n.from("users").select("*").eq("id",r).single();if(s)throw s;return{success:!0,user:e}}else return{success:!0,user:JSON.parse(localStorage.getItem("users")||"[]").find(o=>o.id===r)}}catch(e){return console.error("Error fetching user:",e),{success:!1,message:`حدث خطأ أثناء جلب المستخدم: ${e instanceof Error?e.message:String(e)}`}}}};export{S as a};
